import { ReactNode, useContext, useEffect, useMemo } from 'react'
import { useRouter } from 'next/router';
import Head from 'next/head'
import { auth } from '@/firebase/clientApp';
import { GlobalStateContext } from '@/contexts/global-state-context';
import useAccess from '@/hooks/useAccess';

interface LayoutProps {
  children: ReactNode;
}

export default function Layout({ children }: LayoutProps): JSX.Element {
  useAccess();
  const router = useRouter();
  const { authenticatedUser, isLoadingAuth } = useContext(GlobalStateContext);

  const showGoBackButton = useMemo(() => {
    return !['/', '/login'].includes(router.pathname);
  }, [router.pathname]);

  const handleLogoutClick = () => {
    auth.signOut();
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {!isLoadingAuth && (    
        <main>
          <div className="flex gap-5 bg-slate-100 p-5 items-center justify-between">
            {showGoBackButton && (
              <div onClick={() => router.back()} className="cursor-pointer">
                {`<`} Go Back
              </div>
            )}
            <span className="ml-2">
              The SpaceX app
            </span>

            {authenticatedUser && (
              <div className="flex gap-5 items-center">
                {authenticatedUser?.displayName}
                <button className="btn" onClick={handleLogoutClick}>
                  Logout
                </button>
              </div>
            )}
          </div>

          <div className="m-5">
            {children}
          </div>
        </main>
      )}
    </>
  );
}